"""empty message

Revision ID: 0a696b5a686a
Revises: 
Create Date: 2018-04-15 16:02:41.611474

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0a696b5a686a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('neuralmodels')
    op.drop_table('neurallayer')
    op.drop_table('images')
    op.drop_table('defaultsettings')
    op.drop_table('feedbacks')
    op.drop_table('mlalgorithm')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('mlalgorithm',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=30), nullable=True),
    sa.Column('prepared', sa.BOOLEAN(), nullable=True),
    sa.Column('mlalgorithms_id', sa.INTEGER(), nullable=True),
    sa.CheckConstraint(u'prepared IN (0, 1)'),
    sa.ForeignKeyConstraint(['mlalgorithms_id'], [u'neurallayer.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('feedbacks',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('query', sa.VARCHAR(length=64), nullable=True),
    sa.Column('feature_vector', sa.VARCHAR(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('query')
    )
    op.create_table('defaultsettings',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('model_name', sa.VARCHAR(length=30), nullable=True),
    sa.Column('layer_name', sa.VARCHAR(length=30), nullable=True),
    sa.Column('ml_algorithm', sa.VARCHAR(length=30), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('images',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('image_url', sa.VARCHAR(length=128), nullable=True),
    sa.Column('feedback_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['feedback_id'], [u'feedbacks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('neurallayer',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=30), nullable=True),
    sa.Column('extracted', sa.BOOLEAN(), nullable=True),
    sa.Column('neural_network_id', sa.INTEGER(), nullable=True),
    sa.CheckConstraint(u'extracted IN (0, 1)'),
    sa.ForeignKeyConstraint(['neural_network_id'], [u'neuralmodels.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('neuralmodels',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), nullable=True),
    sa.Column('value', sa.VARCHAR(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
